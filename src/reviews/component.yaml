apiVersion: backstage.io/v1alpha1
kind: Component
metadata:
  name: reviews
  description: Reviews backend
  tags:
    - backend
    - java
  annotations:
    github.com/project-slug: peterj/bookstageinfo
    backstage.io/techdocs-ref: dir:.
    backstage.io/kubernetes-id: reviews
    backstage.io/kubernetes-label-selector: 'app=reviews'
spec:
  type: service
  lifecycle: production
  owner: backend
  system: bookstageinfo
  owner: amitkumar
  team: SRE
  managed_by: SRE_Team
  infra: aws
  providesApis:
    - reviews-api
  consumesApis:
    - ratings-api
  dependsOn:
    - component:ratings
---
apiVersion: backstage.io/v1alpha1
kind: API
metadata:
  name: reviews-api
  description: API for the reviews backend
spec:
  type: openapi
  lifecycle: production
  owner: backend
  system: bookstageinfo
  owner: amitkumar
  team: SRE
  managed_by: SRE_Team
  infra: aws
  definition: |
    swagger: "2.0"
    info:
      description: "This is the API of the reviews service."
      version: "1.0.0"
      title: "Reviews API"
      termsOfService: "https://istio.io/"
      license:
        name: "Apache 2.0"
        url: "http://www.apache.org/licenses/LICENSE-2.0.html"
    basePath: "/api/v1"
    tags:
    - name: "review"
      description: "Review of a product"
    externalDocs:
      description: "Learn more about the Istio BookInfo application"
      url: "https://istio.io/docs/samples/bookinfo.html"
    paths:
      /reviews/{id}:
        get:
          tags:
          - "review"
          summary: "Get reviews for a product"
          description: "Get reviews for a product, including review text and possibly ratings information."
          operationId: "getProductReviews"
          consumes:
          - "application/json"
          produces:
          - "application/json"
          parameters:
          - name: "id"
            in: "path"
            description: "Product id"
            required: true
            type: "integer"
            format: "int32"
          responses:
            200:
              description: "successful operation"
              schema:
                $ref: "#/definitions/ProductReviews"
            400:
              description: "Invalid product id"
    definitions:
      ProductReviews:
          type: "object"
          description: "Object containing reviews for a product"
          properties:
            id:
              type: "integer"
              format: "int32"
              description: "Product id"
            reviews:
              type: "array"
              description: "List of reviews"
              items:
                $ref: "#/definitions/Review"
          required:
          - "id"
          - "reviews"
        Review:
          type: "object"
          description: "Review of a product"
          properties:
            reviewer:
              type: "string"
              description: "Name of the reviewer"
            text:
              type: "string"
              description: "Review text"
            rating:
              $ref: "#/definitions/Rating"
          required:
          - "reviewer"
          - "text"